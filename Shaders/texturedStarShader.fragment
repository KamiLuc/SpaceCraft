#version 330

#include "commonStructs"

const int MAX_POINT_LIGHTS = 124;

in vec4 vCol;
in vec2 texCoord;
in vec3 normal;
in vec3 fragPos;
out vec4 color;

uniform Light omnipresentLight;
uniform int pointLightCount;
uniform PointLight pointLights[MAX_POINT_LIGHTS];
uniform vec3 cameraPosition;
uniform vec2 objectOnScreenPosition;
uniform float timePassed;

//acces via glActiveTexture
uniform sampler2D theTexture;
uniform Material material;

float random(vec2 uv)
{
	return fract(sin(dot(uv, vec2(12.9898, 78.233)) * 43758.5453));
};

void main()
{
	float pulse = 0.8 + 0.10 * sin(timePassed) + 0.10;
	vec4 finalColor = vec4(1.0, 1.0, 1.0, 1.0);
	finalColor *= pulse;
	color = texture(theTexture, texCoord) * finalColor; 
}